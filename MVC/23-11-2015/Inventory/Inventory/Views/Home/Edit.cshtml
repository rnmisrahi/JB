@model Inventory.Models.ItemViewModel
@using Inventory.Models
@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Item</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.ItemData.Id)

        <div class="form-group">
            @Html.LabelFor(model => model.ItemData.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ItemData.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ItemData.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        @*<div class="form-group">
            @Html.LabelFor(model => model.ItemData.ProductionDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ItemData.ProductionDate)
                @Html.ValidationMessageFor(model => model.ItemData.ProductionDate, "", new { @class = "text-danger" })
            </div>
        </div>*@
        <input name="ProductionDate" value="@Model.ItemData.ProductionDate.ToShortDateString()" />

        <div class="form-group">
            @Html.LabelFor(model => model.ItemData.CurrentQuantity, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ItemData.CurrentQuantity, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ItemData.CurrentQuantity, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ItemData.MinimumQuantity, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ItemData.MinimumQuantity, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ItemData.MinimumQuantity, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ItemData.MaximumQuantity, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ItemData.MaximumQuantity, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ItemData.MaximumQuantity, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ItemData.UnitId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.EditorFor(model => model.ItemData.UnitId, new { htmlAttributes = new { @class = "form-control" } })*@
                <select name="ItemData.UnitId">
                    <option value="-1">Select Unit</option>
                    @foreach (Unit u in Model.Units)
                    {
                        if (u.UnitId == Model.ItemData.UnitId)
                        {
                            <option value="@u.UnitId" selected ="selected">@u.UnitName</option>
                        }
                        else
                        {
                            <option value="@u.UnitId">@u.UnitName</option>
                        }
                    }
                </select>
                @Html.ValidationMessageFor(model => model.ItemData.UnitId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "ItemList")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
